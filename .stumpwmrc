;; -*-lisp-*-
;; 
;; Stump WM Configuration File
;; ---------------------------
;; Author: Lucas de Vries <lucas@tuple-typed.org>
;; License: WTFPL
;; 

;; Package
(in-package :stumpwm)

;; {{{ Global variables
;; No startup message
(setf *startup-message* nil)

;; Frame indicator text
(setf *frame-indicator-text* 
        "---- Current Frame ----")

;; No frame indicator on focus
(setf *suppress-frame-indicator* 1)

;; No "Abort" messages
(setf *suppress-abort-messages* 1)

;; Default eval package
(setf *default-package* :stumpwm)

;; Sloppy focus
(setf *mouse-focus-policy* :sloppy)

;; Deny raise requests from firefox
(push '(:class "Firefox") *deny-raise-request*)
;; }}}

;; {{{ Style settings
;; Don't create big borders
(setf *window-border-style* :thin)

;; Modeline format
(setf *screen-mode-line-format* (list "%g"))
;; }}}

;; {{{ Keybindings
;;  {{{ Navigation
;; Screen Navigation
(define-key *top-map* (kbd "s-h")
            "sprev")

(define-key *top-map* (kbd "s-l")
            "snext")

;; Group Navigation
(define-key *top-map* (kbd "s-H")
            "gprev")

(define-key *top-map* (kbd "s-L")
            "gnext")

(define-key *top-map* (kbd "s-/")
            "gnew")

(define-key *top-map* (kbd "s-d")
            "grename")

(define-key *top-map* (kbd "s-D")
            "gkill")

(define-key *top-map* (kbd "s-?")
            "grouplist")

;; Frame navigation
(define-key *top-map* (kbd "s-t")
            "fnext")

(define-key *top-map* (kbd "s-n")
            "fprev")

(define-key *top-map* (kbd "s-w")
            "next")

(define-key *top-map* (kbd "s-W")
            "prev")

(define-key *top-map* (kbd "s-T")
            "next-in-frame")

(define-key *top-map* (kbd "s-N")
            "prev-in-frame")

(define-key *top-map* (kbd "s-v")
            "pull-hidden-next")

(define-key *top-map* (kbd "s-V")
            "pull-hidden-previous")

;;  }}}

;;  {{{ Misc
;; Open terminal
(define-key *root-map* (kbd "c") 
            "exec urxvtc")

(define-key *top-map* (kbd "M-;")
            "exec urxvtc")

;; Open screen terminal
(define-key *top-map* (kbd "s-j")
            "exec urxvtc -e screen -x main")

;; Open vifm terminal
(define-key *top-map* (kbd "M-e")
            "exec urxvtc -e vifm /data")

;; Toggle mpd play/pause
(define-key *top-map* (kbd "M-.")
            "exec mpdtoggle toggle")

;; Echo the song that's being played
(define-key *top-map* (kbd "M-p")
            "exec stump-mpc")

;; CPU/Memory usage stats
(define-key *top-map* (kbd "M-u")
            "exec stump-stats")

;; Find the focussed window
(define-key *top-map* (kbd "s-b")
            "curframe")

;; Fullscreen
(define-key *top-map* (kbd "s-f")
            "fullscreen")

;; Banish the mouse
(define-key *top-map* (kbd "s-@")
            "banish")

;; Toggle modeline
(define-key *top-map* (kbd "s-g")
            "mode-line")

;; Restore phi split layout
(define-key *top-map* (kbd "s-c")
            "restore-from-file .stumpwm/layout-phi")

;; Reload
(define-key *root-map* (kbd "C-r")
            "loadrc")
;;  }}}
;; }}}

;; {{{ Commands
;; fprev, for some reason this isn't in the default
(defcommand (fprev tile-group) () ()
  "Cycle through the frame tree to the prev frame."
  (focus-prev-frame (current-group)))

;; Screen focus commands with indicators
(defcommand snext () ()
  "Go to the next screen."
  (switch-to-screen (next-screen))
  (message "Current Screen")
  (group-wake-up (current-group)))

(defcommand sprev () ()
  "Go to the previous screen."
  (switch-to-screen (next-screen (reverse (sort-screens))))
  (message "Current Screen")
  (group-wake-up (current-group)))
;; }}}

;; {{{ Hooks
;; }}}

;; vim:fdm=marker ft=lisp:
